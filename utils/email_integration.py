"""
CTI-BOT Email Integration
Email bildirim sistemi ve rapor gÃ¶nderimi
"""

import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
from datetime import datetime, timedelta
import os
import json

class EmailIntegration:
    def __init__(self):
        self.smtp_server = os.getenv('SMTP_SERVER', 'smtp.gmail.com')
        self.smtp_port = int(os.getenv('SMTP_PORT', 587))
        self.sender_email = os.getenv('SENDER_EMAIL', '')
        self.sender_password = os.getenv('SENDER_PASSWORD', '')
        self.sender_name = os.getenv('SENDER_NAME', 'CTI-BOT')
        self.enabled = bool(self.sender_email and self.sender_password)
    
    def send_email(self, to_emails, subject, body, html_body=None, attachments=None):
        """Email gÃ¶nder"""
        if not self.enabled:
            print("Email entegrasyonu devre dÄ±ÅŸÄ± (SMTP ayarlarÄ± yok)")
            return False
        
        try:
            # Email mesajÄ± oluÅŸtur
            message = MIMEMultipart('alternative')
            message['From'] = f"{self.sender_name} <{self.sender_email}>"
            message['To'] = ', '.join(to_emails) if isinstance(to_emails, list) else to_emails
            message['Subject'] = subject
            
            # Text ve HTML body ekle
            text_part = MIMEText(body, 'plain', 'utf-8')
            message.attach(text_part)
            
            if html_body:
                html_part = MIMEText(html_body, 'html', 'utf-8')
                message.attach(html_part)
            
            # Ek dosyalar ekle
            if attachments:
                for attachment in attachments:
                    with open(attachment['file_path'], 'rb') as f:
                        part = MIMEBase('application', 'octet-stream')
                        part.set_payload(f.read())
                        encoders.encode_base64(part)
                        part.add_header(
                            'Content-Disposition',
                            f'attachment; filename= {attachment["filename"]}'
                        )
                        message.attach(part)
            
            # SMTP baÄŸlantÄ±sÄ± ve gÃ¶nderim
            context = ssl.create_default_context()
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls(context=context)
                server.login(self.sender_email, self.sender_password)
                server.send_message(message)
            
            print(f"Email baÅŸarÄ±yla gÃ¶nderildi: {subject}")
            return True
            
        except Exception as e:
            print(f"Email gÃ¶nderme hatasÄ±: {e}")
            return False
    
    def send_attack_alert(self, to_emails, attack_data):
        """SaldÄ±rÄ± uyarÄ±sÄ± email'i gÃ¶nder"""
        if not self.enabled:
            return False
        
        try:
            subject = f"ðŸš¨ YENÄ° SÄ°BER SALDIRI: {attack_data.get('company_name', 'Bilinmeyen Åžirket')}"
            
            # Text body
            text_body = f"""
CTI-BOT SÄ°BER SALDIRI UYARISI

Yeni bir siber saldÄ±rÄ± tespit edildi:

Åžirket: {attack_data.get('company_name', 'Bilinmeyen')}
SektÃ¶r: {attack_data.get('sector', 'Bilinmeyen')}
Ãœlke: {attack_data.get('country', 'Bilinmeyen')}
Tehdit AktÃ¶rÃ¼: {attack_data.get('threat_actor', 'Bilinmeyen')}
Etki Seviyesi: {attack_data.get('impact_level', 'Bilinmeyen')}
SaldÄ±rÄ± Tarihi: {attack_data.get('hack_date', 'Bilinmeyen')}
SÄ±zÄ±ntÄ±ya UÄŸrayan Veri: {attack_data.get('data_type_leaked', 'Bilinmeyen')}

AÃ§Ä±klama:
{attack_data.get('description', 'Detay yok')}

Dashboard: http://localhost:5000/
Detay SayfasÄ±: http://localhost:5000/company-detail?name={attack_data.get('company_name', '').replace(' ', '%20')}

---
CTI-BOT | Siber Tehdit Ä°stihbarat Platformu
            """.strip()
            
            # HTML body
            html_body = f"""
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>CTI-BOT SaldÄ±rÄ± UyarÄ±sÄ±</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5; }}
        .container {{ max-width: 600px; margin: 0 auto; background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }}
        .header {{ background-color: #dc3545; color: white; padding: 15px; border-radius: 5px; margin-bottom: 20px; }}
        .alert {{ background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin-bottom: 20px; }}
        .info-table {{ width: 100%; border-collapse: collapse; margin-bottom: 20px; }}
        .info-table th, .info-table td {{ padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }}
        .info-table th {{ background-color: #f8f9fa; font-weight: bold; }}
        .footer {{ margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px; }}
        .btn {{ display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 5px; }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸš¨ YENÄ° SÄ°BER SALDIRI TESPÄ°T EDÄ°LDÄ°</h1>
        </div>
        
        <div class="alert">
            <strong>UyarÄ±:</strong> {attack_data.get('company_name', 'Bilinmeyen')} ÅŸirketine yÃ¶nelik yeni bir siber saldÄ±rÄ± tespit edildi.
        </div>
        
        <table class="info-table">
            <tr><th>Åžirket</th><td>{attack_data.get('company_name', 'Bilinmeyen')}</td></tr>
            <tr><th>SektÃ¶r</th><td>{attack_data.get('sector', 'Bilinmeyen')}</td></tr>
            <tr><th>Ãœlke</th><td>{attack_data.get('country', 'Bilinmeyen')}</td></tr>
            <tr><th>Tehdit AktÃ¶rÃ¼</th><td>{attack_data.get('threat_actor', 'Bilinmeyen')}</td></tr>
            <tr><th>Etki Seviyesi</th><td>{attack_data.get('impact_level', 'Bilinmeyen')}</td></tr>
            <tr><th>SaldÄ±rÄ± Tarihi</th><td>{attack_data.get('hack_date', 'Bilinmeyen')}</td></tr>
            <tr><th>SÄ±zÄ±ntÄ±ya UÄŸrayan Veri</th><td>{attack_data.get('data_type_leaked', 'Bilinmeyen')}</td></tr>
        </table>
        
        <h3>AÃ§Ä±klama:</h3>
        <p>{attack_data.get('description', 'Detay yok')}</p>
        
        <div style="text-align: center; margin: 20px 0;">
            <a href="http://localhost:5000/" class="btn">Dashboard'Ä± GÃ¶rÃ¼ntÃ¼le</a>
            <a href="http://localhost:5000/company-detail?name={attack_data.get('company_name', '').replace(' ', '%20')}" class="btn">Detay SayfasÄ±</a>
        </div>
        
        <div class="footer">
            <p>CTI-BOT | Siber Tehdit Ä°stihbarat Platformu</p>
            <p>Bu email otomatik olarak gÃ¶nderilmiÅŸtir.</p>
        </div>
    </div>
</body>
</html>
            """.strip()
            
            return self.send_email(to_emails, subject, text_body, html_body)
            
        except Exception as e:
            print(f"Email saldÄ±rÄ± uyarÄ±sÄ± hatasÄ±: {e}")
            return False
    
    def send_daily_summary(self, to_emails, summary_data):
        """GÃ¼nlÃ¼k Ã¶zet email'i gÃ¶nder"""
        if not self.enabled:
            return False
        
        try:
            subject = f"ðŸ“Š CTI-BOT GÃ¼nlÃ¼k Ã–zet - {datetime.now().strftime('%d.%m.%Y')}"
            
            # Text body
            text_body = f"""
CTI-BOT GÃœNLÃœK Ã–ZET - {datetime.now().strftime('%d.%m.%Y')}

Ä°STATÄ°STÄ°KLER:
â€¢ Toplam SaldÄ±rÄ±: {summary_data.get('total_attacks', 0)}
â€¢ Benzersiz Åžirket: {summary_data.get('unique_companies', 0)}
â€¢ En Ã‡ok Hedeflenen SektÃ¶r: {summary_data.get('top_sector', 'Bilinmeyen')}
â€¢ En Ã‡ok Hedeflenen Ãœlke: {summary_data.get('top_country', 'Bilinmeyen')}
â€¢ En Aktif Tehdit AktÃ¶rÃ¼: {summary_data.get('top_threat_actor', 'Bilinmeyen')}

RÄ°SK DAÄžILIMI:
â€¢ Kritik: {summary_data.get('critical_attacks', 0)}
â€¢ YÃ¼ksek: {summary_data.get('high_attacks', 0)}
â€¢ Orta: {summary_data.get('medium_attacks', 0)}
â€¢ DÃ¼ÅŸÃ¼k: {summary_data.get('low_attacks', 0)}

Dashboard: http://localhost:5000/
Real-time: http://localhost:5000/realtime

---
CTI-BOT | Siber Tehdit Ä°stihbarat Platformu
            """.strip()
            
            # HTML body
            html_body = f"""
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>CTI-BOT GÃ¼nlÃ¼k Ã–zet</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5; }}
        .container {{ max-width: 600px; margin: 0 auto; background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }}
        .header {{ background-color: #007bff; color: white; padding: 15px; border-radius: 5px; margin-bottom: 20px; }}
        .stats-grid {{ display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px; }}
        .stat-card {{ background-color: #f8f9fa; padding: 15px; border-radius: 5px; text-align: center; }}
        .stat-number {{ font-size: 24px; font-weight: bold; color: #007bff; }}
        .stat-label {{ font-size: 12px; color: #666; margin-top: 5px; }}
        .risk-grid {{ display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; margin-bottom: 20px; }}
        .risk-card {{ padding: 10px; border-radius: 5px; text-align: center; color: white; }}
        .risk-critical {{ background-color: #dc3545; }}
        .risk-high {{ background-color: #fd7e14; }}
        .risk-medium {{ background-color: #ffc107; color: #000; }}
        .risk-low {{ background-color: #28a745; }}
        .footer {{ margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px; }}
        .btn {{ display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 5px; }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ“Š CTI-BOT GÃ¼nlÃ¼k Ã–zet</h1>
            <p>{datetime.now().strftime('%d.%m.%Y')}</p>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number">{summary_data.get('total_attacks', 0)}</div>
                <div class="stat-label">Toplam SaldÄ±rÄ±</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{summary_data.get('unique_companies', 0)}</div>
                <div class="stat-label">Benzersiz Åžirket</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{summary_data.get('top_sector', 'N/A')}</div>
                <div class="stat-label">En Riskli SektÃ¶r</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{summary_data.get('top_country', 'N/A')}</div>
                <div class="stat-label">En Riskli Ãœlke</div>
            </div>
        </div>
        
        <h3>Risk DaÄŸÄ±lÄ±mÄ±:</h3>
        <div class="risk-grid">
            <div class="risk-card risk-critical">
                <div style="font-size: 18px; font-weight: bold;">{summary_data.get('critical_attacks', 0)}</div>
                <div>Kritik</div>
            </div>
            <div class="risk-card risk-high">
                <div style="font-size: 18px; font-weight: bold;">{summary_data.get('high_attacks', 0)}</div>
                <div>YÃ¼ksek</div>
            </div>
            <div class="risk-card risk-medium">
                <div style="font-size: 18px; font-weight: bold;">{summary_data.get('medium_attacks', 0)}</div>
                <div>Orta</div>
            </div>
            <div class="risk-card risk-low">
                <div style="font-size: 18px; font-weight: bold;">{summary_data.get('low_attacks', 0)}</div>
                <div>DÃ¼ÅŸÃ¼k</div>
            </div>
        </div>
        
        <div style="text-align: center; margin: 20px 0;">
            <a href="http://localhost:5000/" class="btn">Dashboard'Ä± GÃ¶rÃ¼ntÃ¼le</a>
            <a href="http://localhost:5000/realtime" class="btn">Real-time GÃ¶rÃ¼nÃ¼m</a>
        </div>
        
        <div class="footer">
            <p>CTI-BOT | Siber Tehdit Ä°stihbarat Platformu</p>
            <p>Bu email otomatik olarak gÃ¶nderilmiÅŸtir.</p>
        </div>
    </div>
</body>
</html>
            """.strip()
            
            return self.send_email(to_emails, subject, text_body, html_body)
            
        except Exception as e:
            print(f"Email gÃ¼nlÃ¼k Ã¶zet hatasÄ±: {e}")
            return False
    
    def send_weekly_report(self, to_emails, report_data, report_file_path=None):
        """HaftalÄ±k rapor email'i gÃ¶nder"""
        if not self.enabled:
            return False
        
        try:
            subject = f"ðŸ“ˆ CTI-BOT HaftalÄ±k Rapor - {report_data.get('week_range', 'Bu Hafta')}"
            
            # Text body
            text_body = f"""
CTI-BOT HAFTALIK RAPOR - {report_data.get('week_range', 'Bu Hafta')}

HAFTALIK Ä°STATÄ°STÄ°KLER:
â€¢ Toplam SaldÄ±rÄ±: {report_data.get('total_attacks', 0)}
â€¢ Yeni Åžirket: {report_data.get('new_companies', 0)}
â€¢ En Riskli SektÃ¶r: {report_data.get('top_sector', 'Bilinmeyen')}
â€¢ En Riskli Ãœlke: {report_data.get('top_country', 'Bilinmeyen')}

TREND ANALÄ°ZÄ°:
â€¢ Ã–nceki haftaya gÃ¶re: {report_data.get('trend_change', '0%')}
â€¢ En Ã§ok artan sektÃ¶r: {report_data.get('trending_sector', 'Bilinmeyen')}
â€¢ En Ã§ok artan Ã¼lke: {report_data.get('trending_country', 'Bilinmeyen')}

DetaylÄ± Rapor: {report_data.get('report_url', 'http://localhost:5000/')}

---
CTI-BOT | Siber Tehdit Ä°stihbarat Platformu
            """.strip()
            
            # Attachments
            attachments = []
            if report_file_path and os.path.exists(report_file_path):
                attachments.append({
                    'file_path': report_file_path,
                    'filename': f"cti_bot_weekly_report_{datetime.now().strftime('%Y%m%d')}.json"
                })
            
            return self.send_email(to_emails, subject, text_body, attachments=attachments)
            
        except Exception as e:
            print(f"Email haftalÄ±k rapor hatasÄ±: {e}")
            return False
    
    def test_connection(self):
        """Email baÄŸlantÄ±sÄ±nÄ± test et"""
        if not self.enabled:
            return {
                'status': 'disabled',
                'message': 'Email SMTP ayarlarÄ± yapÄ±lmamÄ±ÅŸ'
            }
        
        try:
            test_subject = f"ðŸ§ª CTI-BOT Email Test - {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
            test_body = "Bu bir test email'idir. CTI-BOT email entegrasyonu Ã§alÄ±ÅŸÄ±yor."
            
            # Test email'i kendine gÃ¶nder
            success = self.send_email([self.sender_email], test_subject, test_body)
            
            if success:
                return {
                    'status': 'success',
                    'message': 'Email baÄŸlantÄ±sÄ± baÅŸarÄ±lÄ±'
                }
            else:
                return {
                    'status': 'error',
                    'message': 'Email gÃ¶nderilemedi'
                }
                
        except Exception as e:
            return {
                'status': 'error',
                'message': f'Email test hatasÄ±: {e}'
            }

# Global email integration instance
email_integration = EmailIntegration()

